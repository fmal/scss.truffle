(root source.scss
    (zone comment.block.sass
        (start
            (regex /\*))
        (end
            (regex \*/))
        (subzones
            (include @comment-tag)))
    (include @double-slash)
    (include @double-quoted)
    (include @single-quoted)
    (include @interpolation)
    (include @placeholder-selector)
    (zone sass-script-maps
        (start
            (regex [\$[a-zA-Z0-9_-]+(?=:)]
                (0 variable.other)))
        (end
            (regex [(?=;|\)\s*\{|\)\n\)|@)]
                (0 variable.other)))
        (subzones
            (include @double-slash)
            (include @double-quoted)
            (include @single-quoted)
            (include @interpolation)
            (include @variable)
            (include @rgb-value)
            (include @numeric)
            (include @unit)
            (include @flag)
            (include @comma)
            (include @function)
            (include @function-content)
            (include @operator)
            (include @reserved-words)
            (include @property-value)
            (include @dotdotdot)))
    (include @variable-root)
    (include @numeric)
    (include @unit)
    (include @flag)
    (include @comma)
    (include @dotdotdot)
    (zone support.function.name.sass.library
        (start
            (regex @include
                (0 keyword.control.at-rule.css.sass)))
        (end
            (regex [(?=\n|\(|{|;)]
                (0 keyword.control.at-rule.css.sass))))
    (zone support.function.name.sass.no-completions
        (match
            (regex [(@mixin|@function)\s+([a-zA-Z0-9_-]+)]
                (1 keyword.control.at-rule.css.sass)
                (2 entity.name.function))))
    (zone string.quoted.double.css.sass
        (match
            (regex [(?<=@import)\s[a-zA-Z0-9_/.*-]+])))
    (zone keyword.control.at-rule.css.sass
        (start @)
        (end
            (regex [$\n?|\s(?!(all|braille|embossed|handheld|print|projection|screen|speech|tty|tv|if|only|not)(\s|,))|(?=;)])))
    (zone entity.other.attribute-name.id.css.sass
        (start [#])
        (end
            (regex `$\n?|(?=\s|,|;|\(|\)|\.|\[|{|>)`))
        (subzones
            (include @interpolation)
            (include @pseudo-class)))
    (zone entity.other.attribute-name.class.css.sass
        (start
            (regex [\.|(?<=&)(-|_)]))
        (end
            (regex `$\n?|(?=\s|,|;|\(|\)|\[|{|>)`))
        (subzones
            (include @interpolation)
            (include @pseudo-class)))
    (zone entity.other.attribute-selector.sass
        (start
            (regex `\[`))
        (end
            (regex `\]`))
        (subzones
            (include @double-quoted)
            (include @single-quoted)
            (zone keyword.other.regex.sass
                (match
                    (regex \^|\$|\*|~)))))
    (zone entity.other.attribute-name.pseudo-class.css.sass
        (match
            (regex `(?<=\]|\)|not\(|\*|>|>\s):[a-z:-]+|(::|:-)[a-z:-]+`)))
    (zone meta.property-list.css.sass
        (start :)
        (end
            (regex [$\n?|(?=;|\s\(|and\(|{|}|\),)]))
        (subzones
            (include @double-slash)
            (include @double-quoted)
            (include @single-quoted)
            (include @interpolation)
            (include @variable)
            (include @rgb-value)
            (include @numeric)
            (include @unit)
            (include @flag)
            (include @comma)
            (include @function)
            (include @function-content)
            (include @operator)
            (include @property-value)))
    (include @rgb-value)
    (include @function)
    (include @function-content)
    (zone entity.name.tag.css.sass.symbol
        (start
            (regex [(?<!\-|\()\b(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|samp|script|section|select|small|span|strike|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video|main|svg|rect|circle|ellipse|line|polyline|polygon|path|text|x)\b(?!-|\)|:\s)|&]))
        (end
            (regex `(?=\s|,|;|\(|\)|\.|\[|{|>|-|_)`))
        (subzones
            (include @interpolation)
            (include @pseudo-class)))
    (zone entity.name.tag.css.sass
        (start
            (regex [(?<=})(?!;|\(|\)|[a-zA-Z0-9_-]+:)]))
        (end
            (regex `$\n?|\s|(?=,|\.|\[|\))`))
        (subzones
            (include @interpolation)
            (include @pseudo-class)))
    (include @operator)
    (zone support.type.property-name.css.sass
        (match
            (regex [[a-z-]+((?=:|#{))])))
    (include @reserved-words)
    (include @property-value))

(collection comma
    (zone comment.punctuation.comma.sass
        (match
            (regex \band\b|\bor\b|,))))

(collection reserved-words
    (zone support.type.property-name.css.sass
        (match
            (list false from in not null through to true)
            (boundary.both))))

(collection numeric
    (zone constant.numeric.css.sass
        (match
            (regex [(-|\.)?[0-9]+(\.[0-9]+)?]))))

(collection quoted-interpolation
    (zone support.function.interpolation.sass
        (start [#{])
        (end [}])
        (subzones
            (include @variable)
            (include @numeric)
            (include @unit)
            (include @comma))))

(collection operator
    (zone keyword.operator.sass
        (match
            (regex [\+|\s-\s|\s-(?=\$)|(?<=\()-(?=\$)|\s-(?=\()|\*|/|%|=|!|<|>|~]))))

(collection function-content
    (zone string.quoted.double.css.sass
        (start
            (regex [(?<=url\(|format\(|attr\()]))
        (end
            (regex [.(?=\))]))))

(collection double-slash
    (zone comment.line.sass
        (start //)
        (end
            (regex $\n?))
        (subzones
            (include @comment-tag))))

(collection dotdotdot
    (zone variable.other
        (match
            (regex \.\.\.))))

(collection single-quoted
    (zone string.quoted.single.css.sass
        (start ')
        (end ')
        (subzones
            (include @quoted-interpolation))))

(collection rgb-value
    (zone constant.other.color.rgb-value.css.sass
        (match
            (regex [(#)([0-9a-fA-F]{3}|[0-9a-fA-F]{6})\b]))))

(collection flag
    (zone keyword.other.important.css.sass
        (match
            (regex [!(important|default|optional|global)]))))

(collection comment-tag
    (zone comment.tag.sass
        (start
            (regex [(?<={{)]))
        (end
            (regex [(?=}})]))))

(collection property-value
    (zone support.constant.property-value.css.sass
        (match
            (regex [[a-zA-Z0-9_-]+]))))

(collection function
    (zone support.function.name.sass
        (match
            (regex [(?<=[\s|\(|,])(?!url|format|attr)[a-zA-Z0-9_-][\w-]*(?=\()]))))

(collection pseudo-class
    (zone entity.other.attribute-name.pseudo-class.css.sass
        (match
            (regex [:[a-z:-]+]))))

(collection interpolation
    (zone support.function.interpolation.sass
        (start [#{])
        (end [}])
        (subzones
            (include @variable)
            (include @numeric)
            (include @unit)
            (include @comma)
            (include @double-quoted)
            (include @single-quoted))))

(collection unit
    (zone keyword.other.unit.css.sass
        (match
            (regex [(?<=[\d]|})(ch|cm|deg|dpcm|dpi|dppx|em|ex|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vmin|vw|%)]))))

(collection variable-root
    (zone variable.other.root
        (match
            (regex [\$[a-zA-Z0-9_-]+]))))

(collection variable
    (zone variable.other.value
        (match
            (regex [\$[a-zA-Z0-9_-]+]))))

(collection placeholder-selector
    (zone entity.other.attribute-name.placeholder-selector.sass
        (start
            (regex [%(?!\d)]))
        (end
            (regex [$\n?|\s|(?=;|{)]))))

(collection double-quoted
    (zone string.quoted.double.css.sass
        (start ")
        (end ")
        (subzones
            (include @quoted-interpolation))))